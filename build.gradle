plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url = 'https://maven.nucleoid.xyz'
	}
	maven {
		url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven {
		url = 'https://maven.blamejared.com'
	}
	maven {
		url = "http://maven.kyrptonaught.dev"
		allowInsecureProtocol = true
	}
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.kotlindiscord.com/repository/terraformers/"
	}
	maven {
		name = "NerdHubMC"
		url = "https://maven.abusedmaster.xyz/"
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	maven {
		url 'https://storage.googleapis.com/devan-maven/'
	}
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cca_version}"

	modImplementation "com.github.apace100:calio:${project.calio_version}"
	include "com.github.apace100:calio:${project.calio_version}"

	modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta45-1.17'
	include 'net.kyrptonaught:customportalapi:0.0.1-beta45-1.17'

	modImplementation ("com.github.apace100:apoli:${project.apoli_version}") {
		exclude(group: "com.terraformersmc")
	}
	include ("com.github.apace100:apoli:${project.apoli_version}") {
		exclude(group: "com.terraformersmc")
	}

	modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:1.4.5-1.17"
	include "com.github.CrimsonDawn45:Fabric-Shield-Lib:1.4.5-1.17"

	modImplementation "com.github.emilyalexandra:trinkets:3.0.2"
	include "com.github.emilyalexandra:trinkets:3.0.2"

	modImplementation "software.bernie.geckolib:geckolib-fabric-1.17:3.0.16:dev"
	include "software.bernie.geckolib:geckolib-fabric-1.17:3.0.16:dev"

	modImplementation ("de.siphalor:nbtcrafting-1.17:2.1.0+mc1.17.1") {
		exclude(group: "de.siphalor")
	}
	include ("de.siphalor:nbtcrafting-1.17:2.1.0+mc1.17.1"){
		exclude(group: "de.siphalor")
	}


}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
